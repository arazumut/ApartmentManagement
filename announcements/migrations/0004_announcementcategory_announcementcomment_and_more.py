# Generated by Django 5.2.1 on 2025-07-07 15:00

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('announcements', '0003_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
        ('buildings', '0003_building_common_areas_building_construction_year_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnnouncementCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='kategori adı')),
                ('slug', models.SlugField(unique=True, verbose_name='slug')),
                ('description', models.TextField(blank=True, verbose_name='açıklama')),
                ('color', models.CharField(default='#007bff', help_text='Hex renk kodu', max_length=7, verbose_name='renk')),
                ('icon', models.CharField(default='ri-notification-line', help_text='Remix Icon sınıfı', max_length=100, verbose_name='ikon')),
                ('is_active', models.BooleanField(default=True, verbose_name='aktif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='oluşturulma tarihi')),
            ],
            options={
                'verbose_name': 'Duyuru Kategorisi',
                'verbose_name_plural': 'Duyuru Kategorileri',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AnnouncementComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(verbose_name='yorum')),
                ('is_approved', models.BooleanField(default=False, verbose_name='onaylandı')),
                ('is_edited', models.BooleanField(default=False, verbose_name='düzenlendi')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='oluşturulma tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='güncellenme tarihi')),
            ],
            options={
                'verbose_name': 'Duyuru Yorumu',
                'verbose_name_plural': 'Duyuru Yorumları',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AnnouncementFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_type', models.CharField(choices=[('helpful', 'Yararlı'), ('not_helpful', 'Yararlı Değil'), ('outdated', 'Güncel Değil'), ('incorrect', 'Yanlış'), ('suggestion', 'Öneri')], max_length=20, verbose_name='geri bildirim türü')),
                ('comment', models.TextField(blank=True, verbose_name='yorum')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Duyuru Geri Bildirimi',
                'verbose_name_plural': 'Duyuru Geri Bildirimleri',
            },
        ),
        migrations.CreateModel(
            name='AnnouncementLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Duyuru Beğeni',
                'verbose_name_plural': 'Duyuru Beğenileri',
            },
        ),
        migrations.CreateModel(
            name='AnnouncementShare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('email', 'E-posta'), ('whatsapp', 'WhatsApp'), ('telegram', 'Telegram'), ('facebook', 'Facebook'), ('twitter', 'Twitter'), ('linkedin', 'LinkedIn'), ('copy_link', 'Link Kopyala')], max_length=50, verbose_name='platform')),
                ('shared_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Duyuru Paylaşım',
                'verbose_name_plural': 'Duyuru Paylaşımları',
            },
        ),
        migrations.CreateModel(
            name='AnnouncementTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='şablon adı')),
                ('title_template', models.CharField(max_length=255, verbose_name='başlık şablonu')),
                ('content_template', models.TextField(verbose_name='içerik şablonu')),
                ('priority', models.CharField(choices=[('low', 'Düşük'), ('normal', 'Normal'), ('high', 'Yüksek'), ('urgent', 'Acil')], default='normal', max_length=10, verbose_name='öncelik')),
                ('auto_send_notification', models.BooleanField(default=True, verbose_name='otomatik bildirim gönder')),
                ('is_active', models.BooleanField(default=True, verbose_name='aktif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='oluşturulma tarihi')),
            ],
            options={
                'verbose_name': 'Duyuru Şablonu',
                'verbose_name_plural': 'Duyuru Şablonları',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AnnouncementView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(verbose_name='IP adresi')),
                ('user_agent', models.TextField(blank=True, verbose_name='user agent')),
                ('referer', models.URLField(blank=True, verbose_name='referrer')),
                ('viewed_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Duyuru Görüntülenme',
                'verbose_name_plural': 'Duyuru Görüntülenmeler',
            },
        ),
        migrations.AlterModelOptions(
            name='announcement',
            options={'ordering': ['-is_pinned', '-publish_at'], 'verbose_name': 'Duyuru', 'verbose_name_plural': 'Duyurular'},
        ),
        migrations.AlterModelOptions(
            name='announcementread',
            options={'verbose_name': 'Duyuru Okundu', 'verbose_name_plural': 'Duyuru Okunma Kayıtları'},
        ),
        migrations.RemoveField(
            model_name='announcement',
            name='is_active',
        ),
        migrations.AddField(
            model_name='announcement',
            name='allow_comments',
            field=models.BooleanField(default=False, verbose_name='yorumlara izin ver'),
        ),
        migrations.AddField(
            model_name='announcement',
            name='announcement_type',
            field=models.CharField(choices=[('general', 'Genel'), ('maintenance', 'Bakım'), ('security', 'Güvenlik'), ('financial', 'Mali'), ('social', 'Sosyal'), ('emergency', 'Acil Durum')], default='general', max_length=20, verbose_name='duyuru türü'),
        ),
        migrations.AddField(
            model_name='announcement',
            name='expires_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='son geçerlilik tarihi'),
        ),
        migrations.AddField(
            model_name='announcement',
            name='image',
            field=models.ImageField(blank=True, null=True, upload_to='announcements/images/', verbose_name='görsel'),
        ),
        migrations.AddField(
            model_name='announcement',
            name='is_pinned',
            field=models.BooleanField(default=False, verbose_name='sabitlenmiş'),
        ),
        migrations.AddField(
            model_name='announcement',
            name='is_urgent',
            field=models.BooleanField(default=False, verbose_name='acil'),
        ),
        migrations.AddField(
            model_name='announcement',
            name='metadata',
            field=models.JSONField(blank=True, default=dict, verbose_name='ek bilgiler'),
        ),
        migrations.AddField(
            model_name='announcement',
            name='publish_at',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='yayın tarihi'),
        ),
        migrations.AddField(
            model_name='announcement',
            name='read_count',
            field=models.PositiveIntegerField(default=0, verbose_name='okunma sayısı'),
        ),
        migrations.AddField(
            model_name='announcement',
            name='send_email',
            field=models.BooleanField(default=False, verbose_name='e-posta gönder'),
        ),
        migrations.AddField(
            model_name='announcement',
            name='send_notification',
            field=models.BooleanField(default=True, verbose_name='bildirim gönder'),
        ),
        migrations.AddField(
            model_name='announcement',
            name='send_sms',
            field=models.BooleanField(default=False, verbose_name='SMS gönder'),
        ),
        migrations.AddField(
            model_name='announcement',
            name='short_description',
            field=models.CharField(blank=True, help_text='Önizleme ve bildirimler için', max_length=500, verbose_name='kısa açıklama'),
        ),
        migrations.AddField(
            model_name='announcement',
            name='status',
            field=models.CharField(choices=[('draft', 'Taslak'), ('published', 'Yayınlandı'), ('archived', 'Arşivlendi')], default='draft', max_length=10, verbose_name='durum'),
        ),
        migrations.AddField(
            model_name='announcement',
            name='tags',
            field=models.JSONField(blank=True, default=list, verbose_name='etiketler'),
        ),
        migrations.AddField(
            model_name='announcement',
            name='target_apartments',
            field=models.ManyToManyField(blank=True, to='buildings.apartment', verbose_name='hedef daireler'),
        ),
        migrations.AddField(
            model_name='announcement',
            name='target_groups',
            field=models.ManyToManyField(blank=True, help_text='Boş bırakılırsa tüm sakinler', to='auth.group', verbose_name='hedef gruplar'),
        ),
        migrations.AddField(
            model_name='announcement',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_announcements', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='announcement',
            name='view_count',
            field=models.PositiveIntegerField(default=0, verbose_name='görüntülenme sayısı'),
        ),
        migrations.AddField(
            model_name='announcementread',
            name='device_type',
            field=models.CharField(choices=[('web', 'Web'), ('mobile', 'Mobil'), ('email', 'E-posta'), ('sms', 'SMS')], default='web', max_length=20, verbose_name='cihaz türü'),
        ),
        migrations.AddField(
            model_name='announcementread',
            name='ip_address',
            field=models.GenericIPAddressField(blank=True, null=True, verbose_name='IP adresi'),
        ),
        migrations.AddField(
            model_name='announcementread',
            name='user_agent',
            field=models.TextField(blank=True, verbose_name='user agent'),
        ),
        migrations.AlterField(
            model_name='announcement',
            name='attachment',
            field=models.FileField(blank=True, null=True, upload_to='announcements/attachments/', verbose_name='ek dosya'),
        ),
        migrations.AlterField(
            model_name='announcement',
            name='content',
            field=models.TextField(verbose_name='içerik'),
        ),
        migrations.AlterField(
            model_name='announcement',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='oluşturulma tarihi'),
        ),
        migrations.AlterField(
            model_name='announcement',
            name='priority',
            field=models.CharField(choices=[('low', 'Düşük'), ('normal', 'Normal'), ('high', 'Yüksek'), ('urgent', 'Acil')], default='normal', max_length=10, verbose_name='öncelik'),
        ),
        migrations.AlterField(
            model_name='announcement',
            name='title',
            field=models.CharField(max_length=255, verbose_name='başlık'),
        ),
        migrations.AlterField(
            model_name='announcement',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='güncellenme tarihi'),
        ),
        migrations.AddIndex(
            model_name='announcementread',
            index=models.Index(fields=['announcement', 'read_at'], name='announcemen_announc_2e0dd0_idx'),
        ),
        migrations.AddIndex(
            model_name='announcementread',
            index=models.Index(fields=['user', 'read_at'], name='announcemen_user_id_247868_idx'),
        ),
        migrations.AddField(
            model_name='announcement',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='announcements', to='announcements.announcementcategory'),
        ),
        migrations.AddIndex(
            model_name='announcement',
            index=models.Index(fields=['building', 'status'], name='announcemen_buildin_4ae5b5_idx'),
        ),
        migrations.AddIndex(
            model_name='announcement',
            index=models.Index(fields=['publish_at'], name='announcemen_publish_9c3466_idx'),
        ),
        migrations.AddIndex(
            model_name='announcement',
            index=models.Index(fields=['priority'], name='announcemen_priorit_8accd1_idx'),
        ),
        migrations.AddIndex(
            model_name='announcement',
            index=models.Index(fields=['is_pinned'], name='announcemen_is_pinn_e61be2_idx'),
        ),
        migrations.AddField(
            model_name='announcementcomment',
            name='announcement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='announcements.announcement'),
        ),
        migrations.AddField(
            model_name='announcementcomment',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='announcements.announcementcomment', verbose_name='yanıt'),
        ),
        migrations.AddField(
            model_name='announcementcomment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='announcement_comments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='announcementfeedback',
            name='announcement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='announcements.announcement'),
        ),
        migrations.AddField(
            model_name='announcementfeedback',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='announcement_feedbacks', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='announcementlike',
            name='announcement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='announcements.announcement'),
        ),
        migrations.AddField(
            model_name='announcementlike',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='announcement_likes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='announcementshare',
            name='announcement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shares', to='announcements.announcement'),
        ),
        migrations.AddField(
            model_name='announcementshare',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='announcement_shares', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='announcementtemplate',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='templates', to='announcements.announcementcategory', verbose_name='kategori'),
        ),
        migrations.AddField(
            model_name='announcementview',
            name='announcement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='views', to='announcements.announcement'),
        ),
        migrations.AddField(
            model_name='announcementview',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='announcementfeedback',
            unique_together={('announcement', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='announcementlike',
            unique_together={('announcement', 'user')},
        ),
        migrations.AddIndex(
            model_name='announcementview',
            index=models.Index(fields=['announcement', 'viewed_at'], name='announcemen_announc_1fb2b9_idx'),
        ),
        migrations.AddIndex(
            model_name='announcementview',
            index=models.Index(fields=['user', 'viewed_at'], name='announcemen_user_id_7abf11_idx'),
        ),
    ]
