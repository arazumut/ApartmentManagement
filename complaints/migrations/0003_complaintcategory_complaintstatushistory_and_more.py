# Generated by Django 5.2.1 on 2025-07-07 15:00

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('buildings', '0003_building_common_areas_building_construction_year_and_more'),
        ('complaints', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ComplaintCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='kategori adı')),
                ('description', models.TextField(blank=True, null=True, verbose_name='açıklama')),
                ('icon', models.CharField(blank=True, max_length=50, null=True, verbose_name='ikon')),
                ('color', models.CharField(default='#007bff', max_length=7, verbose_name='renk')),
                ('is_active', models.BooleanField(default=True, verbose_name='aktif')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='sıralama')),
            ],
            options={
                'verbose_name': 'Özel Kategori',
                'verbose_name_plural': 'Özel Kategoriler',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ComplaintStatusHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_status', models.CharField(choices=[('new', 'Yeni'), ('in_progress', 'Devam Ediyor'), ('resolved', 'Çözüldü'), ('rejected', 'Reddedildi'), ('closed', 'Kapatıldı')], max_length=20, verbose_name='eski durum')),
                ('new_status', models.CharField(choices=[('new', 'Yeni'), ('in_progress', 'Devam Ediyor'), ('resolved', 'Çözüldü'), ('rejected', 'Reddedildi'), ('closed', 'Kapatıldı')], max_length=20, verbose_name='yeni durum')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notlar')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Durum Geçmişi',
                'verbose_name_plural': 'Durum Geçmişleri',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ComplaintSurvey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response_time_rating', models.PositiveSmallIntegerField(choices=[(1, 'Çok Yavaş'), (2, 'Yavaş'), (3, 'Normal'), (4, 'Hızlı'), (5, 'Çok Hızlı')], verbose_name='tepki süresi puanı')),
                ('solution_quality_rating', models.PositiveSmallIntegerField(choices=[(1, 'Çok Kötü'), (2, 'Kötü'), (3, 'Orta'), (4, 'İyi'), (5, 'Mükemmel')], verbose_name='çözüm kalitesi puanı')),
                ('staff_politeness_rating', models.PositiveSmallIntegerField(choices=[(1, 'Çok Kötü'), (2, 'Kötü'), (3, 'Orta'), (4, 'İyi'), (5, 'Mükemmel')], verbose_name='personel nezaketi puanı')),
                ('overall_satisfaction', models.PositiveSmallIntegerField(choices=[(1, 'Çok Memnuniyetsiz'), (2, 'Memnuniyetsiz'), (3, 'Orta'), (4, 'Memnun'), (5, 'Çok Memnun')], verbose_name='genel memnuniyet')),
                ('additional_feedback', models.TextField(blank=True, null=True, verbose_name='ek geri bildirim')),
                ('would_recommend', models.BooleanField(default=True, verbose_name='tavsiye eder misiniz')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Memnuniyet Anketi',
                'verbose_name_plural': 'Memnuniyet Anketleri',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ComplaintTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='şablon başlığı')),
                ('description', models.TextField(verbose_name='şablon açıklaması')),
                ('category', models.CharField(choices=[('maintenance', 'Bakım'), ('noise', 'Gürültü'), ('cleanliness', 'Temizlik'), ('security', 'Güvenlik'), ('parking', 'Otopark'), ('neighbor', 'Komşu'), ('elevator', 'Asansör'), ('heating', 'Isıtma'), ('water', 'Su'), ('electrical', 'Elektrik'), ('garden', 'Bahçe'), ('management', 'Yönetim'), ('other', 'Diğer')], max_length=20, verbose_name='kategori')),
                ('priority', models.PositiveSmallIntegerField(choices=[(1, 'Düşük'), (2, 'Orta'), (3, 'Yüksek'), (4, 'Acil'), (5, 'Kritik')], default=2, verbose_name='öncelik')),
                ('expected_resolution_days', models.PositiveIntegerField(default=7, verbose_name='beklenen çözüm günü')),
                ('is_active', models.BooleanField(default=True, verbose_name='aktif')),
                ('usage_count', models.PositiveIntegerField(default=0, verbose_name='kullanım sayısı')),
            ],
            options={
                'verbose_name': 'Şikayet Şablonu',
                'verbose_name_plural': 'Şikayet Şablonları',
                'ordering': ['-usage_count', 'title'],
            },
        ),
        migrations.AlterModelOptions(
            name='complaint',
            options={'ordering': ['-created_at'], 'verbose_name': 'Şikayet', 'verbose_name_plural': 'Şikayetler'},
        ),
        migrations.AlterModelOptions(
            name='complaintcomment',
            options={'ordering': ['created_at'], 'verbose_name': 'Şikayet Yorumu', 'verbose_name_plural': 'Şikayet Yorumları'},
        ),
        migrations.AddField(
            model_name='complaint',
            name='actual_cost',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='gerçek maliyet'),
        ),
        migrations.AddField(
            model_name='complaint',
            name='actual_resolution_date',
            field=models.DateField(blank=True, null=True, verbose_name='gerçek çözüm tarihi'),
        ),
        migrations.AddField(
            model_name='complaint',
            name='after_photo',
            field=models.ImageField(blank=True, null=True, upload_to='complaints/after/', verbose_name='sonrası fotoğraf'),
        ),
        migrations.AddField(
            model_name='complaint',
            name='before_photo',
            field=models.ImageField(blank=True, null=True, upload_to='complaints/before/', verbose_name='öncesi fotoğraf'),
        ),
        migrations.AddField(
            model_name='complaint',
            name='estimated_cost',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='tahmini maliyet'),
        ),
        migrations.AddField(
            model_name='complaint',
            name='expected_resolution_date',
            field=models.DateField(blank=True, null=True, verbose_name='beklenen çözüm tarihi'),
        ),
        migrations.AddField(
            model_name='complaint',
            name='is_anonymous',
            field=models.BooleanField(default=False, verbose_name='anonim şikayet'),
        ),
        migrations.AddField(
            model_name='complaint',
            name='is_recurring',
            field=models.BooleanField(default=False, verbose_name='tekrarlanan sorun'),
        ),
        migrations.AddField(
            model_name='complaint',
            name='parent_complaint',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='related_complaints', to='complaints.complaint'),
        ),
        migrations.AddField(
            model_name='complaint',
            name='satisfaction_rating',
            field=models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Çok Kötü'), (2, 'Kötü'), (3, 'Orta'), (4, 'İyi'), (5, 'Mükemmel')], null=True, verbose_name='memnuniyet puanı'),
        ),
        migrations.AddField(
            model_name='complaint',
            name='view_count',
            field=models.PositiveIntegerField(default=0, verbose_name='görüntülenme sayısı'),
        ),
        migrations.AddField(
            model_name='complaintcomment',
            name='is_internal',
            field=models.BooleanField(default=False, help_text='Sadece yönetim tarafından görülebilir', verbose_name='dahili yorum'),
        ),
        migrations.AlterField(
            model_name='complaint',
            name='attachment',
            field=models.FileField(blank=True, null=True, upload_to='complaints/', verbose_name='ek dosya'),
        ),
        migrations.AlterField(
            model_name='complaint',
            name='category',
            field=models.CharField(choices=[('maintenance', 'Bakım'), ('noise', 'Gürültü'), ('cleanliness', 'Temizlik'), ('security', 'Güvenlik'), ('parking', 'Otopark'), ('neighbor', 'Komşu'), ('elevator', 'Asansör'), ('heating', 'Isıtma'), ('water', 'Su'), ('electrical', 'Elektrik'), ('garden', 'Bahçe'), ('management', 'Yönetim'), ('other', 'Diğer')], default='maintenance', max_length=20, verbose_name='kategori'),
        ),
        migrations.AlterField(
            model_name='complaint',
            name='description',
            field=models.TextField(verbose_name='açıklama'),
        ),
        migrations.AlterField(
            model_name='complaint',
            name='priority',
            field=models.PositiveSmallIntegerField(choices=[(1, 'Düşük'), (2, 'Orta'), (3, 'Yüksek'), (4, 'Acil'), (5, 'Kritik')], default=2, verbose_name='öncelik'),
        ),
        migrations.AlterField(
            model_name='complaint',
            name='resolution_notes',
            field=models.TextField(blank=True, null=True, verbose_name='çözüm notları'),
        ),
        migrations.AlterField(
            model_name='complaint',
            name='status',
            field=models.CharField(choices=[('new', 'Yeni'), ('in_progress', 'Devam Ediyor'), ('resolved', 'Çözüldü'), ('rejected', 'Reddedildi'), ('closed', 'Kapatıldı')], default='new', max_length=20, verbose_name='durum'),
        ),
        migrations.AlterField(
            model_name='complaint',
            name='title',
            field=models.CharField(max_length=255, verbose_name='başlık'),
        ),
        migrations.AlterField(
            model_name='complaintcomment',
            name='attachment',
            field=models.FileField(blank=True, null=True, upload_to='complaint_comments/', verbose_name='ek dosya'),
        ),
        migrations.AlterField(
            model_name='complaintcomment',
            name='comment',
            field=models.TextField(verbose_name='yorum'),
        ),
        migrations.AddIndex(
            model_name='complaint',
            index=models.Index(fields=['building', 'status'], name='complaints__buildin_05aa7c_idx'),
        ),
        migrations.AddIndex(
            model_name='complaint',
            index=models.Index(fields=['created_at'], name='complaints__created_805464_idx'),
        ),
        migrations.AddIndex(
            model_name='complaint',
            index=models.Index(fields=['priority'], name='complaints__priorit_f4170d_idx'),
        ),
        migrations.AddField(
            model_name='complaintcategory',
            name='building',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custom_categories', to='buildings.building'),
        ),
        migrations.AddField(
            model_name='complaintstatushistory',
            name='changed_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_changes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='complaintstatushistory',
            name='complaint',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='complaints.complaint'),
        ),
        migrations.AddField(
            model_name='complaintsurvey',
            name='complaint',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='survey', to='complaints.complaint'),
        ),
        migrations.AddField(
            model_name='complainttemplate',
            name='building',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complaint_templates', to='buildings.building'),
        ),
        migrations.AlterUniqueTogether(
            name='complaintcategory',
            unique_together={('building', 'name')},
        ),
    ]
